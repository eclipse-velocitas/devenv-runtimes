# Copyright (c) 2022 Robert Bosch GmbH and Microsoft Corporation
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.imageSeatservice.name}}
  labels:
    app: {{.Values.imageSeatservice.name}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{.Values.imageSeatservice.name}}
  template:
    metadata:
      labels:
        app: {{.Values.imageSeatservice.name}}
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "{{.Values.imageSeatservice.name}}"
        {{- with (index .Values.imageSeatservice.ports 0) }}
        dapr.io/app-port: "{{.port}}"
        {{- end }}
        dapr.io/log-level: "debug"
        dapr.io/config: "config"
        dapr.io/app-protocol: "grpc"
    spec:
      containers:
        - name: {{.Values.imageSeatservice.name}}
          image: {{.Values.imageSeatservice.repository}}:{{.Values.imageSeatservice.tag}}
          imagePullPolicy: {{.Values.imageSeatservice.pullPolicy}}
          {{- if .Values.imageSeatservice.ports}}
          ports:
          {{- range $i, $port := .Values.imageSeatservice.ports }}
            - name: default{{ $i }}
              containerPort: {{ .port }}
              protocol: TCP
          {{- end }}
          {{- end }}
          {{- if .Values.imageSeatservice.environmentVariables}}
          env:
          {{- range .Values.imageSeatservice.environmentVariables }}
            - name: {{ .name }}
              value: "{{ .value }}"
          {{- end }}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{.Values.imageSeatservice.name}}-nodeport
spec:
  type: NodePort
  selector:
    app: {{.Values.imageSeatservice.name}}
  ports:
  {{- with (index .Values.imageSeatservice.ports 0) }}
  - port: {{.port}}
    targetPort: {{.port}}
    nodePort: {{.nodePort}}
  {{- end }}
